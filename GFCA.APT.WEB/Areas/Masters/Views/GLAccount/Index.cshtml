@{
#if DNX48
ViewBag.Title = "GL-Account";
#endif
}
@using GFCA.APT.Domain.HTTP.Controls
@using Syncfusion.EJ2.Popups
@using Syncfusion.EJ2.Grids
@using Syncfusion.EJ2.Inputs
@using Syncfusion.EJ2

@section styles
{
    <style>
        .form-group.col-md-6 {
            width: 250px;
        }

        :-ms-fullscreen, .e-dialog {
            max-width: 552px;
        }

        @@media only screen and (max-width: 991px) {
            .e-dialog.e-control.e-popup {
                min-width: 300px !important;
            }
        }

        @@media only screen and (min-width: 992px) {
            .e-dialog.e-control.e-popup {
                /* min-width: 550px !important;*/
                min-width: 300px !important;
                min-height: 180px;
            }

            .e-bigger.e-dialog.e-control.e-popup,
            .e-bigger .e-dialog.e-control.e-popup {
                min-height: 496px;
            }
        }
    </style>
}

@section DialogPlaceholder
{
    <!-- BEGIN DialogPlaceholder -->
    <script id='dialogtemplate' type="text/x-template">
        <div id="dialogTemp" style="width:650px; height:300px;">
        </div>
    </script>

    <!-- BEGIN DialogPlaceholder -->
}

@section ContentPlaceholder
{
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-lg-12 p-1">
                    <div class="card card-success card-outline">
                        <div class="card-body text-sm p-1">
                            @(Html.EJS()
                                  .Grid("grdBrand")
                                  .Height("450")
                                  .FrozenColumns(1)
                                  .FrozenColumns(6)
                                  .DataSource(ds =>
                                  {
                                      ds
                                      .Url(@Url.Action("UrlDatasource", "GLAccount", new { Area = "Masters" }))
                                      .Adaptor("UrlAdaptor")
                                      ;
                                  })
                                  .ShowColumnMenu(false).AllowSorting()
                                  .AllowPaging(true).PageSettings(page => page.PageCount(5))
                                  .AllowFiltering(true).FilterSettings(filter => filter.Type(FilterType.Excel))
                                  .AllowExcelExport()
                                  .Toolbar(new List<object>() {
                                      new { id ="toolbar_add", text = "Add", prefixIcon = "e-icons e-add" },
                                      new { id ="toolbar_edit", text = "Edit", prefixIcon = "e-icons e-edit" },
                                      new { id ="toolbar_del", text = "Delete", prefixIcon = "e-icons e-delete" },
                                      new { id ="toolbar_excel", text = "Excel", prefixIcon = "e-icons e-excelexport" },
                                      new { text = "Print", prefixIcon = "e-icons e-print" },
                                  })
                                  .ToolbarClick("gl_accountPopup.OnToolbarClick")
                                  .EditSettings(edit =>
                                  {
                                      edit
                                      .AllowEditOnDblClick(false)
                                      .AllowAdding(true)
                                      .AllowEditing(true)
                                      .AllowDeleting(true).ShowConfirmDialog(true).ShowDeleteConfirmDialog(true)
                                      .Mode(EditMode.Dialog)
                                      .Template("#dialogtemplate");
                                  })
                                  .DataBound("gl_accountPopup.OnDataBound")
                                  .RowDeselected("gl_accountPopup.OnRowDeselected")
                                  .RowSelected("gl_accountPopup.OnRowSelected")
                                  .Columns(col =>
                                  {


                                      col.Field("ACC_CODE").HeaderText("Code").Width("150").HeaderTextAlign(TextAlign.Center).TextAlign(TextAlign.Left).Freeze(Syncfusion.EJ2.Grids.FreezeDirection.Left).Add();
                                      col.Field("ACC_NAME").HeaderText("Name").Width("400").HeaderTextAlign(TextAlign.Center).TextAlign(TextAlign.Left).Add();
                                      col.Field("ACC_TYPE").HeaderText("Type").Width("150").HeaderTextAlign(TextAlign.Center).TextAlign(TextAlign.Left).Add();
                                      col.Field("IO_CODE").HeaderText("IO Code").Width("150").HeaderTextAlign(TextAlign.Center).TextAlign(TextAlign.Left).Add();
                                      col.Field("CENTER_CODE").HeaderText("Center Code").Width("250").HeaderTextAlign(TextAlign.Center).TextAlign(TextAlign.Left).Add();
                                      col.Field("FUND_ID").HeaderText("Fund Id").Width("250").HeaderTextAlign(TextAlign.Center).TextAlign(TextAlign.Left).Add();
                                      col.Field("FUND_CENTER_ID").HeaderText("Fund Center Id").Width("250").HeaderTextAlign(TextAlign.Center).TextAlign(TextAlign.Left).Add();

                                      col.Field("ACC_TYPE_DESC").HeaderText("Acc. Type Desc.").Width("250").HeaderTextAlign(TextAlign.Center).TextAlign(TextAlign.Left).Add();
                                      col.Field("ACC_GROUP1").HeaderText("Acc. Grp.1").Width("250").HeaderTextAlign(TextAlign.Center).TextAlign(TextAlign.Left).Add();
                                      col.Field("ACC_GROUP1_DESC").HeaderText("Acc. Grp1 Desc.").Width("250").HeaderTextAlign(TextAlign.Center).TextAlign(TextAlign.Left).Add();
                                      col.Field("ACC_GROUP2").HeaderText("Acc. Grp2").Width("250").HeaderTextAlign(TextAlign.Center).TextAlign(TextAlign.Left).Add();
                                      col.Field("ACC_GROUP2_DESC").HeaderText("Acc. Grp2 Desc.").Width("250").HeaderTextAlign(TextAlign.Center).TextAlign(TextAlign.Left).Add();
                                      col.Field("ACC_REMARK").HeaderText("Remark").Width("250").HeaderTextAlign(TextAlign.Center).TextAlign(TextAlign.Left).Add();


                                      col.Field("CREATED_BY").HeaderText("Created By").Width("250").HeaderTextAlign(TextAlign.Center).TextAlign(TextAlign.Left).Add();
                                      col.Field("CREATED_DATE").HeaderText("Created Date").Width("250").Format("dd-MMM-yyyy hh:mm:ss").HeaderTextAlign(TextAlign.Center).TextAlign(TextAlign.Left).Add();
                                      col.Field("UPDATED_BY").HeaderText("Updated By").Width("250").HeaderTextAlign(TextAlign.Center).TextAlign(TextAlign.Left).Add();
                                      col.Field("UPDATED_DATE").HeaderText("Updated Date").Width("250").Format("dd-MMM-yyyy hh:mm:ss").HeaderTextAlign(TextAlign.Center).TextAlign(TextAlign.Left).Add();

                                      col.Field("FLAG_ROW").HeaderText("FLAG_ROW").Width("100").HeaderTextAlign(TextAlign.Center).TextAlign(TextAlign.Center).Freeze(Syncfusion.EJ2.Grids.FreezeDirection.Right).Add();

                                  })
                                  .Render())

                        </div>
                    </div><!-- /.card -->
                </div>
            </div><!-- /.row -->

        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->

    @Html.Partial("~/Areas/Masters/Views/GLAccount/_Popup_gl_account.cshtml")
}

@section preScripts
{
    <!-- BEGIN preScripts -->
    <script>

        var urlServices = {
            CurrentUrl: "@Url.Action("index", "GLAccount", new { Area = "Masters" })",
            Add       : "@Url.Action("Add", "GLAccount", new { Area = "Masters" })",
            Edit      : "@Url.Action("Edit", "GLAccount", new { Area = "Masters" })",
            Delete    : "@Url.Action("Delete", "GLAccount", new { Area = "Masters" })",
        }

        var argruments = {
            data: null,
        }
    </script>

    @Scripts.Render("~/Scripts/masters/gl_accountPopup.js")
    <!-- END preScripts -->

}

@section scripts
{

    @Scripts.Render("~/Scripts/masters/gl_account.js")

}
