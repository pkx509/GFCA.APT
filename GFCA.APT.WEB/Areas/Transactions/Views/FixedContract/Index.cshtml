@{
#if DNX48
ViewBag.Title = "Fixed contract";
#endif
}
@using GFCA.APT.Domain.HTTP.Controls
@using Syncfusion.EJ2.Popups
@using Syncfusion.EJ2.Grids
@using Syncfusion.EJ2.Inputs
@using Syncfusion.EJ2

@section styles
{
    <style>
        .form-group.col-md-6 {
            width: 250px;
        }

        :-ms-fullscreen, .e-dialog {
            max-width: 552px;
        }

        @@media only screen and (max-width: 991px) {
            .e-dialog.e-control.e-popup {
                min-width: 300px !important;
            }
        }

        @@media only screen and (min-width: 992px) {
            .e-dialog.e-control.e-popup {
                /* min-width: 550px !important;*/
                min-width: 300px !important;
                min-height: 180px;
            }

            .e-bigger.e-dialog.e-control.e-popup,
            .e-bigger .e-dialog.e-control.e-popup {
                min-height: 496px;
            }
        }
    </style>
}

@section DialogPlaceholder
{
    <!-- BEGIN DialogPlaceholder -->
    <script id='dialogtemplate' type="text/x-template">
        <div id="dialogTemp" style="width:650px; height:300px;">
        </div>
    </script>

    <!-- BEGIN DialogPlaceholder -->
}

@section ContentPlaceholder
{
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-lg-12 p-1">
                    <div class="card card-success card-outline">
                        <div class="card-body text-sm p-1">
                            @(Html.EJS()
                                  .Grid("grdFixedContract")
                                  .Height("450")
                                  .DataSource(ds =>
                                  {
                                      ds
                                      .Url(@Url.Action("UrlFixedContractHeaderList", "FixedContract", new { Area = "Transactions" }))
                                      .Adaptor("UrlAdaptor")
                                      ;
                                  })
                                  .ShowColumnMenu(false).AllowSorting()
                                  .AllowPaging(true).PageSettings(page => page.PageCount(5))
                                  .AllowFiltering(true).FilterSettings(filter => filter.Type(FilterType.Excel))
                                  .AllowExcelExport()
                                  .Toolbar(new List<object>() {
                                      new { id ="toolbar_add", text = "Add", prefixIcon = "e-icons e-add" },
                                      new { id ="toolbar_edit", text = "Edit", prefixIcon = "e-icons e-edit" },
                                      new { id ="toolbar_del", text = "Delete", prefixIcon = "e-icons e-delete" },
                                      new { id = "toolbar_exportexcel", text = "Export Excel", prefixIcon = "e-icons e-excelexport" }
                                  })
                                  // .ToolbarClick("channelPopup.OnExcelExportClick")
                                  .EditSettings(edit =>
                                  {
                                      edit
                                      .AllowEditOnDblClick(false)
                                      .AllowAdding(false)
                                      .AllowEditing(false)
                                      .AllowDeleting(false).ShowConfirmDialog(true).ShowDeleteConfirmDialog(true)
                                      .Mode(EditMode.Dialog);
                                      // .Template("#dialogtemplate");
                                  })
                                  .RowDeselected("OnRowDeselected")
                                  .RowSelected("OnRowSelected")

                                  .Columns(col =>
                                  {
                                      col.Field("DOC_CODE").HeaderText("Doc no.").Width("200").HeaderTextAlign(TextAlign.Center).TextAlign(TextAlign.Center).Add();
                                      col.Field("CHANNEL_NAME").HeaderText("Channel").Width("150").HeaderTextAlign(TextAlign.Center).TextAlign(TextAlign.Right).Add();
                                      col.Field("REQUESTER").HeaderText("Requester").Width("200").HeaderTextAlign(TextAlign.Center).TextAlign(TextAlign.Right).Add();
                                      col.Field("CLIENT_NAME").HeaderText("Client").Width("150").HeaderTextAlign(TextAlign.Center).TextAlign(TextAlign.Center).Add();
                                      col.Field("CREATED_DATE").HeaderText("Created Date").Width("200").Format("dd-MM-yyyy hh:mm:ss").HeaderTextAlign(TextAlign.Center).TextAlign(TextAlign.Left).Add();
                                  })
                                  .Render())

                        </div>
                    </div><!-- /.card -->
                </div>
            </div><!-- /.row -->

        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    @Html.Partial("~/Areas/Transactions/Views/FixedContract/_Popup_FixedContractHeader.cshtml")
}

@section preScripts
{
    <!-- BEGIN preScripts -->
    <script>
        var urlServices = {
            CurrentUrl: "@Url.Action("index", "FixedContract", new { Area = "Transactions" })",
            Add: "@Url.Action("Add", "FixedContract", new { Area = "Transactions" })",
            AddHeader: "@Url.Action("CreateFixedContractHeader", "FixedContract", new { Area = "Transactions" })",
            AddDetail: "@Url.Action("CreateFixedContractDetail", "FixedContract", new { Area = "Transactions" })",
            Delete: "@Url.Action("Delete", "FixedContract", new { Area = "Transactions" })",
        }
        var argruments = {
            data: null,
        }

        var OnRowSelected = function (args) {
            console.log(args);
            argruments.data = args.data;
        }
        var OnRowDeselected = function (args) {
            if (argruments.data == args.data) {
                argruments.data = null;
            }
        }
    </script>

    @Scripts.Render("~/Scripts/transactions/fixedContractHeaderPopup.js")
    @Scripts.Render("~/Scripts/transactions/fixedContractDetail.js")
}

@section scripts
{
    @Scripts.Render("~/Scripts/transactions/fixedContract.js")
}


