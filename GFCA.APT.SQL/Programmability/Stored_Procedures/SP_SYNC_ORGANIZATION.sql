CREATE PROCEDURE [dbo].[SP_SYNC_ORGANIZATION]
AS
	/*

Definition of FLAG_ROW in Stagging
	I = Insert new
	U = Update
	D = Delete

*/
BEGIN TRY

	INSERT INTO TB_M_ORGANIZATION 
	(COMP_CODE, ORG_CODE, REPORT_TO, HIERACHY_ID, ORG_NAME, FLAG_ORG, FLAG_ROW, CREATED_BY, CREATED_DATE)
	SELECT
	  S.COMP_CODE
	, S.ORG_CODE
	, S.REPORT_TO
	, S.HIERACHY_ID
	, S.ORG_NAME
	, S.FLAG_ORG
	, 'S' FLAG_ROW
	, S.UPLOAD_BY
	, S.UPLOAD_DATE
	FROM TB_S_ORGANIZATION S
	LEFT JOIN TB_M_ORGANIZATION M ON (M.ORG_CODE = S.ORG_CODE) AND (S.FLAG_ROW = 'I')
	WHERE M.ORG_CODE IS NULL
	;

	UPDATE M
	SET
	  M.COMP_CODE    = S.COMP_CODE
	, M.ORG_CODE     = S.ORG_CODE
	, M.REPORT_TO    = S.REPORT_TO
	, M.HIERACHY_ID  = S.HIERACHY_ID
	, M.ORG_NAME     = S.ORG_NAME
	, M.FLAG_ORG     = S.FLAG_ORG
	, M.FLAG_ROW     = CASE 
							WHEN S.FLAG_ROW = 'A' THEN 'S' --CASE SAP SEND A (Active) then APT will be S (SHOW)
							WHEN S.FLAG_ROW = 'V' THEN 'D' --CASE SAP SEND V (Inactive) then APT will be D (DISAPPEAR)
					   ELSE 'S' END						   --OTHER SAP SEND U (Update) or anyelse, anyway APT will be set to SHOW
	, M.UPDATED_BY   = S.UPLOAD_BY
	, M.UPDATED_DATE = S.UPLOAD_DATE
	FROM TB_M_ORGANIZATION M
	INNER JOIN TB_S_ORGANIZATION S ON (S.ORG_CODE = M.ORG_CODE) AND (S.FLAG_ROW != 'I')
	;

	/*
	DELETE M
	FROM TB_M_ORGANIZATION M
	INNER JOIN TB_S_ORGANIZATION S ON (S.ORG_CODE = M.ORG_CODE) AND (S.FLAG_ORG = 'D')
	;
	*/

	/*--on finally success should be truncate the staging table
	DELETE TB_S_ORGANIZATION
	;
	*/
END TRY
BEGIN CATCH

	INSERT INTO DB_Errors
    VALUES
	(
		SUSER_SNAME(),
		ERROR_NUMBER(),
		ERROR_STATE(),
		ERROR_SEVERITY(),
		ERROR_LINE(),
		ERROR_PROCEDURE(),
		ERROR_MESSAGE(),
		GETDATE()
	);

END CATCH
